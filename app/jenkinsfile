environment {
    // 필요한 환경 변수를 여기에 정의할 수 있습니다. 예:
    DOCKER_IMAGE = 'myapp' // Docker 이미지 이름
    DOCKER_REGISTRY = 'dockerhub_username/myapp' // DockerHub의 사용자명과 이미지 이름
}

stages {
    stage('Checkout') {
        steps {
            // GitHub 리포지토리에서 코드를 체크아웃합니다.
            git 'https://github.com/suhoJ/thesis-recommend-goorm.git'
        }
    }
    stage('Build') {
        steps {
            // Maven을 사용하여 Java 프로젝트를 빌드합니다.
            sh 'mvn clean package'
        }
    }
    stage('Test') {
        steps {
            // Maven을 사용하여 테스트를 실행합니다.
            sh 'mvn test'
        }
    }
    stage('Build Docker Image') {
        steps {
            // Docker 이미지를 빌드합니다.
            sh "docker build -t ${DOCKER_REGISTRY}:${BUILD_NUMBER} ."
        }
    }
    stage('Push Docker Image') {
        steps {
            // 빌드된 Docker 이미지를 DockerHub에 푸시합니다.
            sh "docker push ${DOCKER_REGISTRY}:${BUILD_NUMBER}"
        }
    }
    stage('Deploy to Kubernetes') {
        steps {
            // Kubernetes 클러스터에 애플리케이션을 배포합니다.
            sh "kubectl apply -f k8s/"
        }
    }
}

post {
    success {
        // 빌드가 성공했을 때 실행할 액션
        echo 'The pipeline succeeded!'
    }
    failure {
        // 빌드가 실패했을 때 실행할 액션
        echo 'The pipeline failed.'
    }
}
